spring:
    application:
        name: stockleague-backend

    config:
        import: optional:file:.env[.properties]


    profiles:
        active: ${SPRING_PROFILES_ACTIVE:docker}

    datasource:
        url: ${SPRING_DATASOURCE_URL}
        username: ${SPRING_DATASOURCE_USERNAME}
        password: ${SPRING_DATASOURCE_PASSWORD}
        driver-class-name: org.postgresql.Driver
        hikari:
            connection-timeout: 30000
            maximum-pool-size: 10
            minimum-idle: 2
            idle-timeout: 600000
            max-lifetime: 1800000

    jpa:
        hibernate:
            ddl-auto: validate
        show-sql: false
        properties:
            hibernate:
                format_sql: true
                dialect: org.hibernate.dialect.PostgreSQLDialect

    flyway:
        enabled: false
        locations: classpath:db/migration
        baseline-on-migrate: true
        validate-on-migrate: true
        out-of-order: false
        connect-retries: 5

    data:
        redis:
            host: ${SPRING_REDIS_HOST}
            port: 6379
            password: ${SPRING_REDIS_PASSWORD}


jwt:
    secret: ${JWT_SECRET_KEY}
    access-token-validity: 1800000       # 30분 = 1000 * 60 * 30
    refresh-token-validity: 2592000000   # 30일 = 1000 * 60 * 60 * 24 * 30

server:
    port: 8080
    servlet:
        encoding:
            charset: UTF-8
            enabled: true
            force: true

cors:
    allowed-origins: ${ALLOWED_ORIGINS}

kakao:
    client-id: ${KAKAO_CLIENT_ID}
    client-secret: ${KAKAO_CLIENT_SECRET}
    redirect-uri: ${KAKAO_REDIRECT_URI}
    token-uri: https://kauth.kakao.com/oauth/token
    user-info-uri: https://kapi.kakao.com/v2/user/me
    auth-base-url: https://kauth.kakao.com
    api-base-url: https://kapi.kakao.com

logging:
    level:
        root: info
        org.springframework.web: warn

        # Hibernate SQL 로그 완전 끄기
        org.hibernate.SQL: off
        org.hibernate.type: off
        org.hibernate.type.descriptor.sql: off
        org.hibernate.type.descriptor.jdbc: off
        org.hibernate.orm.jdbc.bind: off
        org.hibernate.stat: off
        org.hibernate: warn

        # WebSocket 관련 로그 필요할 때만 디버깅
        org.springframework.web.socket: DEBUG
        org.springframework.web.servlet.handler: TRACE
        org.springframework.web.socket.server.support.WebSocketHttpRequestHandler: info
        org.springframework.web.socket.handler: info
        org.springframework.web.socket.config: info
        org.springframework.web.socket.sockjs: info

        # STOMP 서브프로토콜 처리
        org.springframework.web.socket.messaging: info
        org.springframework.messaging.simp: info
        org.springframework.messaging.simp.stomp: info
        org.springframework.messaging.simp.user: info
        org.springframework.messaging.support: info
        org.springframework.messaging.converter: info

        # 브로커 내부 처리
        org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler: info
        org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry: warn
        org.springframework.messaging.simp.user.DefaultSimpUserRegistry: warn

        # 프로젝트 내부 로그
        com.stockleague.backend.openapi.parser.KisWebSocketResponseParser: info
        com.stockleague.backend.infra.redis.StockPriceRedisService: info
        com.stockleague.backend.infra.redis.StockOrderBookRedisService: info
        com.stockleague.backend.global.exception: debug
openapi:
    auth-url: https://openapivts.koreainvestment.com:29443
    appKey: ${OPENAPI_API_KEY}
    appSecret: ${OPENAPI_API_SECRET}
    grant-type: client_credentials
    scope: oob
